#
# Copyright 2024 Apollo Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Modified build
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        jdk:
        - 8
        - 11
        - 17
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-build (${{ matrix.jdk }}).csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/apollo/apollo', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - uses: actions/checkout@v4
    - run: touch optcd-3.txt
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.jdk }}
    - run: touch optcd-4.txt
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - run: touch optcd-5.txt
    - name: JDK 8
      run: mvn -B clean package jacoco:report -Dmaven.gitcommitid.skip=true
    - run: touch optcd-6.txt
    - name: JDK 11
      run: mvn -B clean compile -Dmaven.gitcommitid.skip=true
    - run: touch optcd-7.txt
    - name: JDK 17
      run: mvn -B clean compile -Dmaven.gitcommitid.skip=true
    - run: touch optcd-8.txt
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ${{ github.workspace }}/apollo-*/target/site/jacoco/jacoco.xml
    - run: touch optcd-9.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-build (${{ matrix.jdk }})
        path: /home/runner/inotifywait-log-build (${{ matrix.jdk }}).csv
    name: build (${{ matrix.jdk }})
'on':
- push
- workflow_dispatch
